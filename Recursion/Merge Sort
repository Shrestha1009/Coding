public class solution {

	public static void mergeSort(int[] input){
		if(input.length <= 1)
			return;
        int mid = input.length/2;
		int s1[] = new int[mid];
		int s2[] = new int[input.length - mid];
		for(int i=0; i<mid; i++) {
			s1[i] = input[i];
		}
        int k=0;
		for(int i=mid; i<input.length; i++) {
			s2[k] = input[i];
            k++;
		}
		mergeSort(s1);
		mergeSort(s2);
		merge(s1, s2, input);
        
	}
    
    public static void merge(int[] s1, int[] s2, int[] arr) {
		int i=0; 
		int j=0;
		int k=0;
		while(i< s1.length && j< s2.length) {
			if(s1[i] < s2[j]) {
				arr[k] = s1[i];
				i++;
				k++;
			}else{
				arr[k] = s2[j];
				k++;
				j++;
			}
		}	
        while(i<s1.length) {
            arr[k] = s1[i];
            k++;
            i++;
        }

        while(j<s2.length) {
            arr[k] = s2[j];
            k++;
            j++;
        }	
	}
}
